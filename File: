#include <stdio.h>
#include <stdlib.h>
#include "sort.h"

/**
 * counting_sort - Sorts an array of integers in ascending order using
 *                 the Counting sort algorithm.
 * @array: The array to be sorted
 * @size: Number of elements in the array
 */
void counting_sort(int *array, size_t size)
{
	if (array == NULL || size < 2)
		return;

	/* Find the maximum element in the array */
	int max = array[0];
	for (size_t i = 1; i < size; i++) {
		if (array[i] > max)
			max = array[i];
	}

	/* Create and initialize the counting array */
	int *count = malloc((max + 1) * sizeof(int));
	if (count == NULL)
		return;
	for (int i = 0; i <= max; i++)
		count[i] = 0;

	/* Count the occurrences of each element */
	for (size_t i = 0; i < size; i++)
		count[array[i]]++;

	/* Update the count array to store the actual position of each element */
	for (int i = 1; i <= max; i++)
		count[i] += count[i - 1];

	/* Build the sorted array */
	int *sorted = malloc(size * sizeof(int));
	if (sorted == NULL) {
		free(count);
		return;
	}
	for (size_t i = 0; i < size; i++) {
		sorted[count[array[i]] - 1] = array[i];
		count[array[i]]--;
	}

	/* Copy the sorted array back to the original array */
	for (size_t i = 0; i < size; i++)
		array[i] = sorted[i];

	/* Print the counting array */
	printf("%d", count[0]);
	for (int i = 1; i <= max; i++)
		printf(", %d", count[i]);
	printf("\n");

	/* Free allocated memory */
	free(count);
	free(sorted);
}

